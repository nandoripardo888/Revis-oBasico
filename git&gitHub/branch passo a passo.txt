trabalhar com branches no repositório local e enviá-los para o GitHub:
1 - Abra o Git Bash e navegue até a pasta do seu repositório local.

2 - Verifique qual branch você está atualmente usando digitando "git branch" ou "git status"

3 - Crie um novo branch digitando "git branch nome-do-branch"

4 - Mude para o novo branch digitando "git checkout nome-do-branch"

5 - Faça alterações e commits no novo branch como de costume (git add, git commit)

6 - Envie o branch para o repositório remoto no GitHub digitando "git push -u origin nome-do-branch"

7 - Se quiser trabalhar em outro branch ou voltar para o branch principal, use o comando "git checkout nome-do-branch"

8 - Se desejar mesclar o branch com o branch principal use "git merge nome-do-branch"

9 - Se desejar deletar o branch use "git branch -d nome-do-branch"

Os branches (ramificações) são uma forma de dividir o trabalho em um projeto usando o Git. Eles permitem que você trabalhe em diferentes versões do projeto ao mesmo tempo, sem afetar a versão principal. Isso é útil quando você quer adicionar novas funcionalidades, corrigir bugs ou experimentar coisas sem afetar a versão estável do seu projeto.
Por exemplo, imagine que você está trabalhando em um projeto de software e quer adicionar uma nova funcionalidade. Em vez de fazer as alterações diretamente na versão principal do projeto, você pode criar um novo branch chamado "nova-funcionalidade" e fazer as alterações lá. Depois de testar e garantir que as alterações estão funcionando corretamente, você pode mesclar (merge) o branch "nova-funcionalidade" de volta para a versão principal.
Em resumo, branches são ferramentas poderosas para gerenciamento de versões e trabalho em equipe, é uma boa prática usar branches para evitar problemas e garantir que a versão principal do projeto esteja sempre estável.